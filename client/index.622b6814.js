import { S as SvelteComponent, i as init, s as safe_not_equal, a as space, e as element, t as text, q as query_selector_all, d as detach, c as claim_space, b as claim_element, f as children, g as claim_text, h as attr, j as insert, k as append, n as noop } from './client.14b1c764.js';

/* src/routes/index.svelte generated by Svelte v3.22.3 */

function create_fragment(ctx) {
	let t0;
	let main;
	let div;
	let h1;
	let t1;
	let t2;
	let a;
	let t3;

	return {
		c() {
			t0 = space();
			main = element("main");
			div = element("div");
			h1 = element("h1");
			t1 = text("Great success!");
			t2 = space();
			a = element("a");
			t3 = text("Go");
			this.h();
		},
		l(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-oofwcx\"]", document.head);
			head_nodes.forEach(detach);
			t0 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			div = claim_element(main_nodes, "DIV", {});
			var div_nodes = children(div);
			h1 = claim_element(div_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Great success!");
			h1_nodes.forEach(detach);
			t2 = claim_space(div_nodes);
			a = claim_element(div_nodes, "A", { rel: true, href: true });
			var a_nodes = children(a);
			t3 = claim_text(a_nodes, "Go");
			a_nodes.forEach(detach);
			div_nodes.forEach(detach);
			main_nodes.forEach(detach);
			this.h();
		},
		h() {
			document.title = "Sapper project template";
			attr(h1, "class", "svelte-3xkk1u");
			attr(a, "rel", "prefetch");
			attr(a, "href", "calculate/");
			attr(main, "class", "svelte-3xkk1u");
		},
		m(target, anchor) {
			insert(target, t0, anchor);
			insert(target, main, anchor);
			append(main, div);
			append(div, h1);
			append(h1, t1);
			append(div, t2);
			append(div, a);
			append(a, t3);
		},
		p: noop,
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(t0);
			if (detaching) detach(main);
		}
	};
}

class Routes extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Routes;
